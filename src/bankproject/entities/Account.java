package bankproject.entities;

import java.util.Random;

public class Account extends AbstractEntity {

	private Integer idAccount = null; 
	private Customer customer = null;
	private String accountNumber = null; 
	private int balance = 0;
	private Random randGen = null;

	/**
	 * Common initialization for constructors 
	 */
	private void init() {
		this.randGen = new Random();	
	}


	/**
	 * Default constructor
	 */
	public Account () {
		this.init();
	}

	/**
	 * Constructor to create an account with the accountNumber generated by the random method (createAccountNumberFromRandomNumber)
	 */

	public Account(CountryEnum country, Customer customer){
		this.init();
		this.accountNumber = country.getAbbreviation() + this.createRandomCode();
		this.customer = customer;
	}

	/**
	 * Constructor to create an account with the accountNumber done by a string (createAccountNumberFromString) ---> to be used in the operation Thread
	 */

	public Account(String str) {
		this.init();
		this.accountNumber = str;
	}

	/**
	 * getter
	 * @return idAccount
	 */
	public Integer getIdAccount() {
		return idAccount;
	}

	/**
	 * setter
	 * @param idAccount
	 */
	public void setIdAccount(int idAccount) {
		this.idAccount = idAccount;
	}

	/**
	 * getter
	 * @return accountNumber
	 */
	public String getAccountNumber() {
		return accountNumber;
	}

	/**
	 * setter
	 * @param accountNumber
	 */
	public void setAccountNumber(String accountNumber) {
		this.accountNumber = accountNumber;
	}

	/**
	 * getter
	 * @return balance
	 */
	public int getBalance() {
		return balance;
	}

	/**
	 * setter
	 * @param balance
	 */
	public void setBalance(int balance) {
		this.balance = balance;
	}

	/**
	 * getter
	 * @return customer
	 */
	public Customer getCustomer() {
		return customer;
	}

	/**
	 * setter
	 * @param customer
	 */
	public void setCustomer(Customer customer) {
		this.customer = customer;
	}

	/**
	 * Creates random six digits numeric code
	 * @return
	 */
	private String createRandomCode() {
		return  String.format("%06d", this.randGen.nextInt(1000000));
	}

	/**
	 * 
	 * @param money
	 */
	public void addMoneyToBalance (int money){
		this.balance += money;
	}

	/**
	 * 
	 * @param money
	 */
	public void removeMoneyToBalance(int money){
		this.balance -= money;
	}



}
